{"ast":null,"code":"var _jsxFileName = \"D:\\\\CODE\\\\solidity\\\\hardhat\\u5165\\u95E8\\\\hardhat-react-1\\\\my-app\\\\src\\\\components\\\\Dapp.js\";\nimport React from 'react';\nimport { NoWalletDetected } from './NoWalletDetected';\nimport { ConnectWallet } from './ConnectWallet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Dapp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.initialState = {\n      tokenData: undefined,\n      selectedAddress: undefined,\n      balance: undefined,\n      txBeingSent: undefined,\n      deployBegin: undefined,\n      transactionError: undefined,\n      networkError: undefined,\n      decimals: undefined\n    };\n    this.state = this.initialState;\n  }\n  async _connectWallet() {\n    const [selectedAddress] = await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n    if (!this._checkNetwork()) {\n      return;\n    }\n    this._initialize(selectedAddress);\n    window.ethereum.on('accountsChanged', ([newAddress]) => {\n      this._stopPollingData();\n      if (newAddress === undefined) {\n        return this._resetState();\n      }\n      this._initialize(newAddress);\n    });\n    window.ethereum.on('chainChanged', ([_chainId]) => {\n      this._stopPollingData();\n      this._resetState();\n    });\n  }\n  _checkNetwork() {\n    if (window.ethereum.networkVersion === HARDHAT_NETWORK_ID) {\n      return true;\n    }\n    this.setState({\n      networkError: 'Please connect Metamask to goerli'\n    });\n    return false;\n  }\n  render() {\n    if (window.ethereum === undefined) {\n      return /*#__PURE__*/_jsxDEV(NoWalletDetected, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 18\n      }, this);\n    }\n    if (!this.state.selectedAddress) {\n      return /*#__PURE__*/_jsxDEV(ConnectWallet, {\n        connectWallet: () => this._connectWallet(),\n        networkError: this.state.networkError,\n        dismiss: () => this._dismissNetworkError()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this);\n    }\n  }\n}","map":{"version":3,"names":["React","NoWalletDetected","ConnectWallet","jsxDEV","_jsxDEV","Dapp","Component","constructor","props","initialState","tokenData","undefined","selectedAddress","balance","txBeingSent","deployBegin","transactionError","networkError","decimals","state","_connectWallet","window","ethereum","request","method","_checkNetwork","_initialize","on","newAddress","_stopPollingData","_resetState","_chainId","networkVersion","HARDHAT_NETWORK_ID","setState","render","fileName","_jsxFileName","lineNumber","columnNumber","connectWallet","dismiss","_dismissNetworkError"],"sources":["D:/CODE/solidity/hardhat入门/hardhat-react-1/my-app/src/components/Dapp.js"],"sourcesContent":["import React from 'react'\r\n\r\nimport { NoWalletDetected } from './NoWalletDetected'\r\nimport { ConnectWallet } from './ConnectWallet'\r\n\r\nexport class Dapp extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n          this.initialState = {\r\n          \r\n          tokenData: undefined,\r\n          selectedAddress: undefined,\r\n          balance: undefined,\r\n          txBeingSent: undefined,\r\n          deployBegin: undefined,\r\n          transactionError: undefined,\r\n          networkError: undefined,\r\n          decimals: undefined,\r\n\r\n        }\r\n    \r\n        this.state = this.initialState\r\n    }\r\n\r\n\r\n    async _connectWallet() {\r\n\r\n        const [selectedAddress] = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n\r\n        if (!this._checkNetwork()) {\r\n          return\r\n        }\r\n    \r\n        this._initialize(selectedAddress)\r\n    \r\n        window.ethereum.on('accountsChanged', ([newAddress]) => {\r\n          this._stopPollingData()\r\n          if (newAddress === undefined) {\r\n            return this._resetState()\r\n          }\r\n    \r\n          this._initialize(newAddress)\r\n        })\r\n    \r\n        window.ethereum.on('chainChanged', ([_chainId]) => {\r\n          this._stopPollingData()\r\n          this._resetState()\r\n        })\r\n    }\r\n\r\n    _checkNetwork() {\r\n      if (window.ethereum.networkVersion === HARDHAT_NETWORK_ID) {\r\n        return true\r\n      }\r\n  \r\n      this.setState({\r\n        networkError: 'Please connect Metamask to goerli',\r\n      })\r\n  \r\n      return false\r\n    }\r\n\r\n    render() {\r\n\r\n        if (window.ethereum === undefined) {\r\n          return <NoWalletDetected />\r\n        }\r\n    \r\n        if (!this.state.selectedAddress) {\r\n          return (\r\n            <ConnectWallet\r\n              connectWallet={() => this._connectWallet()}\r\n              networkError={this.state.networkError}\r\n              dismiss={() => this._dismissNetworkError()}\r\n            />\r\n          )\r\n        }\r\n    }\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,aAAa,QAAQ,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,OAAO,MAAMC,IAAI,SAASL,KAAK,CAACM,SAAS,CAAC;EAEtCC,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAEV,IAAI,CAACC,YAAY,GAAG;MAEpBC,SAAS,EAAEC,SAAS;MACpBC,eAAe,EAAED,SAAS;MAC1BE,OAAO,EAAEF,SAAS;MAClBG,WAAW,EAAEH,SAAS;MACtBI,WAAW,EAAEJ,SAAS;MACtBK,gBAAgB,EAAEL,SAAS;MAC3BM,YAAY,EAAEN,SAAS;MACvBO,QAAQ,EAAEP;IAEZ,CAAC;IAED,IAAI,CAACQ,KAAK,GAAG,IAAI,CAACV,YAAY;EAClC;EAGA,MAAMW,cAAcA,CAAA,EAAG;IAEnB,MAAM,CAACR,eAAe,CAAC,GAAG,MAAMS,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;MAAEC,MAAM,EAAE;IAAsB,CAAC,CAAC;IAE1F,IAAI,CAAC,IAAI,CAACC,aAAa,CAAC,CAAC,EAAE;MACzB;IACF;IAEA,IAAI,CAACC,WAAW,CAACd,eAAe,CAAC;IAEjCS,MAAM,CAACC,QAAQ,CAACK,EAAE,CAAC,iBAAiB,EAAE,CAAC,CAACC,UAAU,CAAC,KAAK;MACtD,IAAI,CAACC,gBAAgB,CAAC,CAAC;MACvB,IAAID,UAAU,KAAKjB,SAAS,EAAE;QAC5B,OAAO,IAAI,CAACmB,WAAW,CAAC,CAAC;MAC3B;MAEA,IAAI,CAACJ,WAAW,CAACE,UAAU,CAAC;IAC9B,CAAC,CAAC;IAEFP,MAAM,CAACC,QAAQ,CAACK,EAAE,CAAC,cAAc,EAAE,CAAC,CAACI,QAAQ,CAAC,KAAK;MACjD,IAAI,CAACF,gBAAgB,CAAC,CAAC;MACvB,IAAI,CAACC,WAAW,CAAC,CAAC;IACpB,CAAC,CAAC;EACN;EAEAL,aAAaA,CAAA,EAAG;IACd,IAAIJ,MAAM,CAACC,QAAQ,CAACU,cAAc,KAAKC,kBAAkB,EAAE;MACzD,OAAO,IAAI;IACb;IAEA,IAAI,CAACC,QAAQ,CAAC;MACZjB,YAAY,EAAE;IAChB,CAAC,CAAC;IAEF,OAAO,KAAK;EACd;EAEAkB,MAAMA,CAAA,EAAG;IAEL,IAAId,MAAM,CAACC,QAAQ,KAAKX,SAAS,EAAE;MACjC,oBAAOP,OAAA,CAACH,gBAAgB;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAC7B;IAEA,IAAI,CAAC,IAAI,CAACpB,KAAK,CAACP,eAAe,EAAE;MAC/B,oBACER,OAAA,CAACF,aAAa;QACZsC,aAAa,EAAEA,CAAA,KAAM,IAAI,CAACpB,cAAc,CAAC,CAAE;QAC3CH,YAAY,EAAE,IAAI,CAACE,KAAK,CAACF,YAAa;QACtCwB,OAAO,EAAEA,CAAA,KAAM,IAAI,CAACC,oBAAoB,CAAC;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC;IAEN;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}